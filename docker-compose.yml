services:
  online:
    container_name: online
    build:
      context: .
      dockerfile: Dockerfile_Server
    networks:
      - online_server_network
    ports:
      - "8181:8181"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PSWD=${DB_PSWD}
      - SERVER_PORT=${SERVER_PORT}
      - DAYS_PLAYER_INACTIVE=${DAYS_PLAYER_INACTIVE}
      - DAYS_FRIEND_INACTIVE_REQUEST=${DAYS_FRIEND_INACTIVE_REQUEST}
      - MAX_LEVEL=${MAX_LEVEL}
    restart: on-failure:5
    volumes:
      - online_data:/usr/src/app
    profiles:
      - default

  online_full:
    container_name: online_full
    extends: online
    depends_on:
      mongodb:
        condition: service_healthy
    profiles:
      - full

  mongodb:
    container_name: mongodb
    build:
      context: .
      dockerfile: Dockerfile_MongoDB
    networks:
      - online_server_network
    ports:
      - "27017:27017"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PSWD=${DB_PSWD}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "localhost:27017/$(DB_NAME)", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 5
    profiles:
      - full

networks:
  online_server_network:
    driver: bridge

volumes:
  mongo_data:
  online_data: